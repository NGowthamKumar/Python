class Node:
    def __init__(self,data):
        self.prev=None
        self.data=data
        self.next=None
        self.count=0
        
class doublelinked:
    def __init__(self):
        self.headval=None
        self.count=0
        
    def insertend(self,data):
        temp=Node(data)
        if(self.headval==None):
            self.headval=temp
        else:
            traverse=self.headval
            while traverse.next is not None:
                traverse=traverse.next
            traverse.next=temp
            temp.prev=traverse
        self.count+=1
            
            
    def insertbegin(self,data):
        temp=Node(data)
        if(self.headval==None):
            self.headval=temp
        else:
            temp.next=self.headval
            self.headval.prev=temp
            self.headval=temp
        self.count+=1
    
    def insertpos(self,ele,pos):
        temp=Node(ele)
        i=1
        prev=None
        traverse=self.headval
        while(i<pos):
            prev=traverse
            traverse=traverse.next
            i+1
        prev.next=temp
        temp.prev=traverse.prev
        temp.next=traverse
        traverse.prev=temp
        self.count+=1
        
        
    def deleteend(self):
        if(self.headval==None):
            print("list is empty")
        else:
            temp=self.headval
            while temp is not None:
                print(temp.data)
                temp=temp.next 
            a=temp.prev
            a.next=None
            del temp
            self.count-=1
    
    def deletepos(self,pos):
        temp=self.headval
        i=1
        while(i<pos):
            temp=temp.next
            i+=1
        a=temp.prev
        a.next=temp.next
        b=temp.next
        b.prev=a
        del temp
        self.count-=1
        
    def printt(self):
         
        temp=self.headval
        if(temp==None):
            print("list is empty")
        else:
            while temp is not None:
                print(temp.data)
                temp=temp.next    
        
ob=doublelinked()
while(True):
    ch=int(input("enter 1.insert at begining 2.insert at end 3.insert at pos 4.delete at ending 5.display 6.delete at position"))
    if(ch==1):
        ele=int(input("enter ele"))
        ob.insertbegin(ele)
    elif(ch==2):
        ele=int(input("enter ele"))
        ob.insertend(ele)
    elif(ch==3):
        ele=int(input("enter ele"))
        pos=int(input("enter position"))
        ob.insertpos(ele,pos)
    elif(ch==4):
        ob.deleteend()
    elif(ch==5):
        ob.printt()
    elif(ch==6):
        pos=int(input("enter position"))
        ob.deletepos(pos)

